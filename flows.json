[
    {
        "id": "5f562f66.a301e",
        "type": "tab",
        "label": "Device A",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c4285970.3276d8",
        "type": "tab",
        "label": "web-app",
        "disabled": false,
        "info": ""
    },
    {
        "id": "eaa5749e.352818",
        "type": "tab",
        "label": "Setup Wireless SSID",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2c5d25cb.3428ca",
        "type": "subflow",
        "name": "App NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "c104210d.418eb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "c104210d.418eb",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "ca529822.9112f8",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "99bb1519.85fc18"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e3c68b88.d82258",
        "type": "subflow",
        "name": "App CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "f5a9eda8.5c5bc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "f5a9eda8.5c5bc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "8341090a.df9758",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "966e270e.701e48"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Blinky-Lite-Tutorial",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "79250bf3.365cc4",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "44b51478.9c022c",
        "type": "websocket-listener",
        "path": "/mode-0-damper/websocket",
        "wholemsg": "false"
    },
    {
        "id": "c427a7cd.35f1f8",
        "type": "websocket-listener",
        "path": "/setup/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3015577f.f8ec58",
        "type": "serial-port",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "true",
        "responsetimeout": ""
    },
    {
        "id": "93049b70.2dc5c8",
        "type": "mqtt out",
        "z": "5f562f66.a301e",
        "name": "Publish Readings",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "79250bf3.365cc4",
        "x": 1290,
        "y": 400,
        "wires": []
    },
    {
        "id": "30f384ea.cf21fc",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Save device config in Memory",
        "func": "msg.payload.reset.value = 0;\nflow.set('device', msg.payload);\nflow.set('initDevice', true);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 830,
        "y": 40,
        "wires": [
            [
                "89892a30.598e28",
                "48876f6b.6fca3"
            ]
        ]
    },
    {
        "id": "9115ea87.0ca208",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Readings Alarm Scan",
        "func": "if (!msg.payload) return null;\nvar device = flow.get('device');\ndevice.linkQuality.value     = global.get('linkQuality');\ndevice.signalLevel.value     = global.get('signalLevel');\nscalarAlarmScan(device, 'reading');\nvar newMsg = \n{\n    topic: flow.get('deviceProps').project + '/' + flow.get('deviceProps').deviceType + '/' + flow.get('deviceProps').name + '/reading',\n    payload: JSON.stringify(device)\n}\nreturn newMsg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 400,
        "wires": [
            [
                "27095148.93187e"
            ]
        ]
    },
    {
        "id": "a3ff8e5.b79de7",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Prepare MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1300,
        "y": 460,
        "wires": [
            [
                "1cdcbcd8.9514e3"
            ]
        ]
    },
    {
        "id": "1482e22f.57fa2e",
        "type": "http in",
        "z": "c4285970.3276d8",
        "name": "/mode-0-damper",
        "url": "/mode-0-damper",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "71ce0943.81bf18"
            ]
        ]
    },
    {
        "id": "70be1872.dfaf48",
        "type": "http in",
        "z": "c4285970.3276d8",
        "name": "/apps",
        "url": "/apps",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "af9642ae.0c0da"
            ]
        ]
    },
    {
        "id": "b1885d32.8d9cc",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/mode-0-damper?name={{{payload.deviceAName}}}\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/balance.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Mode 0 Damper {{{payload.deviceAName}}}</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/setup\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/basicYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Setup</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 830,
        "y": 180,
        "wires": [
            [
                "c6d4dfc7.827cb"
            ]
        ]
    },
    {
        "id": "18e277b4.8fc208",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Mode 0 Damper",
        "output": "str",
        "x": 550,
        "y": 180,
        "wires": [
            [
                "fd81c62c.98f018"
            ]
        ]
    },
    {
        "id": "f328fcb4.91dc",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 410,
        "y": 180,
        "wires": [
            [
                "18e277b4.8fc208"
            ]
        ]
    },
    {
        "id": "fd81c62c.98f018",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "balance.png",
        "output": "str",
        "x": 690,
        "y": 180,
        "wires": [
            [
                "b1885d32.8d9cc"
            ]
        ]
    },
    {
        "id": "5023092b.a0fe38",
        "type": "mqtt in",
        "z": "5f562f66.a301e",
        "name": "Subscribe DeviceA",
        "topic": "$(MQTTDEVICEA)",
        "qos": "0",
        "datatype": "auto",
        "broker": "79250bf3.365cc4",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "257906ae.f6991a"
            ]
        ]
    },
    {
        "id": "49c7b59e.00e86c",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "deviceA",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "deviceA",
        "payload": "MQTTDEVICEA",
        "payloadType": "env",
        "x": 100,
        "y": 40,
        "wires": [
            [
                "f7b2b73c.569598"
            ]
        ]
    },
    {
        "id": "4a8d91e8.fcb68",
        "type": "file in",
        "z": "5f562f66.a301e",
        "name": "Read device config",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 470,
        "y": 40,
        "wires": [
            [
                "4b0be623.7f7b88"
            ]
        ]
    },
    {
        "id": "4b0be623.7f7b88",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 630,
        "y": 40,
        "wires": [
            [
                "30f384ea.cf21fc"
            ]
        ]
    },
    {
        "id": "f7b2b73c.569598",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Init flow Variables",
        "func": "var mqttSplit = msg.payload.split('/');\nvar deviceProps = {\n    project     :   mqttSplit[0],\n    deviceType  :   mqttSplit[1],\n    name        :   mqttSplit[2],\n    configFile  :   mqttSplit[1] + '-' + mqttSplit[2] + '.json'\n};\nflow.set('deviceProps',deviceProps);\nflow.set('initDevice',false);\nreturn {topic: 'readFile', 'filename':deviceProps.configFile};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 40,
        "wires": [
            [
                "4a8d91e8.fcb68"
            ]
        ]
    },
    {
        "id": "257906ae.f6991a",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 270,
        "y": 140,
        "wires": [
            [
                "c2106663.a49658"
            ]
        ]
    },
    {
        "id": "c2106663.a49658",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter MQTT",
        "func": "return {topic:msg.topic.split('/')[3], payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 140,
        "wires": [
            [
                "9e75e21c.458df"
            ]
        ]
    },
    {
        "id": "9e75e21c.458df",
        "type": "switch",
        "z": "5f562f66.a301e",
        "name": "mqtt topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "setting",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ping",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 140,
        "wires": [
            [
                "42c6e9ce.4932e8"
            ],
            [
                "9115ea87.0ca208"
            ]
        ]
    },
    {
        "id": "168ce872.83d788",
        "type": "file",
        "z": "5f562f66.a301e",
        "name": "Init Settings",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1410,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "89892a30.598e28",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Make Pretty",
        "func": "var jsonPretty = JSON.stringify(msg.payload,null,2);\nreturn {topic: msg.payload, payload:jsonPretty, 'filename':flow.get('deviceProps').configFile};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1230,
        "y": 120,
        "wires": [
            [
                "168ce872.83d788"
            ]
        ]
    },
    {
        "id": "d2572e9a.d2ef9",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Settings Alarm Scan",
        "func": "scalarAlarmScan(msg.payload, 'setting');\nflow.set('device', msg.payload); \nflow.set('newSetting', 1); \nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 120,
        "wires": [
            [
                "89892a30.598e28",
                "557e4f40.b904e",
                "48876f6b.6fca3"
            ]
        ]
    },
    {
        "id": "27095148.93187e",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "Limit 1 Hz",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 960,
        "y": 400,
        "wires": [
            [
                "d976b431.f90598"
            ]
        ]
    },
    {
        "id": "ba79496e.4e42b8",
        "type": "exec",
        "z": "c4285970.3276d8",
        "command": "iwconfig",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 300,
        "y": 840,
        "wires": [
            [
                "25a2b2c8.26f4ce"
            ],
            [],
            []
        ]
    },
    {
        "id": "fc7d9351.a3d0a",
        "type": "inject",
        "z": "c4285970.3276d8",
        "name": "",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 840,
        "wires": [
            [
                "ba79496e.4e42b8"
            ]
        ]
    },
    {
        "id": "25a2b2c8.26f4ce",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Get Signal Quality",
        "func": "var info = msg.payload;\nvar linkStartIndex  = info.indexOf('Link Quality=');\nvar levelStartIndex = info.indexOf('Signal level=');\nvar linkQuality = Number(info.substring(linkStartIndex + 13, linkStartIndex + 15));\nvar signalLevel =  Number(info.substring(levelStartIndex + 13, levelStartIndex + 16));\nvar ssid = info.substring(info.indexOf('ESSID') + 7);\nssid = ssid.substring(0,ssid.indexOf('\"'));\nvar val = {linkQuality : linkQuality, signalLevel: signalLevel, ssid:ssid};\nglobal.set('linkQuality',linkQuality);\nglobal.set('signalLevel', signalLevel);\nglobal.set('ssid', ssid);\nreturn {topic :'test',payload : val};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "cf44f6bf.8956b8",
        "type": "websocket in",
        "z": "c4285970.3276d8",
        "name": "/mode-0-damper/websocket",
        "server": "44b51478.9c022c",
        "client": "",
        "x": 160,
        "y": 720,
        "wires": [
            [
                "ea909034.6fb25"
            ]
        ]
    },
    {
        "id": "62aaa250.9b67dc",
        "type": "websocket out",
        "z": "c4285970.3276d8",
        "name": "/mode-0-damper/websocket",
        "server": "44b51478.9c022c",
        "client": "",
        "x": 840,
        "y": 720,
        "wires": []
    },
    {
        "id": "ea909034.6fb25",
        "type": "link out",
        "z": "c4285970.3276d8",
        "name": "Web socket out",
        "links": [
            "2f289f87.fe2ff",
            "c7f3b5bf.85c9a8"
        ],
        "x": 315,
        "y": 720,
        "wires": []
    },
    {
        "id": "d033193d.436d68",
        "type": "link in",
        "z": "c4285970.3276d8",
        "name": "Web socket in",
        "links": [
            "1cdcbcd8.9514e3",
            "78ceea9e.d0b204"
        ],
        "x": 655,
        "y": 720,
        "wires": [
            [
                "62aaa250.9b67dc"
            ]
        ]
    },
    {
        "id": "2f289f87.fe2ff",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "Device A web socket in",
        "links": [
            "ea909034.6fb25"
        ],
        "x": 35,
        "y": 240,
        "wires": [
            [
                "f812bb6a.1aec68"
            ]
        ]
    },
    {
        "id": "f812bb6a.1aec68",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "87f08687.b6d578"
            ]
        ]
    },
    {
        "id": "1cdcbcd8.9514e3",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Device A web socket out",
        "links": [
            "d033193d.436d68"
        ],
        "x": 1435,
        "y": 460,
        "wires": []
    },
    {
        "id": "d976b431.f90598",
        "type": "gzip",
        "z": "5f562f66.a301e",
        "name": "",
        "x": 1090,
        "y": 400,
        "wires": [
            [
                "93049b70.2dc5c8",
                "a3ff8e5.b79de7"
            ]
        ]
    },
    {
        "id": "42c6e9ce.4932e8",
        "type": "gzip",
        "z": "5f562f66.a301e",
        "name": "",
        "x": 750,
        "y": 120,
        "wires": [
            [
                "cd99fe0e.38599"
            ]
        ]
    },
    {
        "id": "cd99fe0e.38599",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 870,
        "y": 120,
        "wires": [
            [
                "d2572e9a.d2ef9"
            ]
        ]
    },
    {
        "id": "f14573da.0a788",
        "type": "inject",
        "z": "c4285970.3276d8",
        "name": "project",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "project",
        "payload": "PROJECT",
        "payloadType": "env",
        "x": 120,
        "y": 920,
        "wires": [
            [
                "938904a0.58d668"
            ]
        ]
    },
    {
        "id": "938904a0.58d668",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Save global env variables",
        "func": "global.set(msg.topic,msg.payload);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 920,
        "wires": []
    },
    {
        "id": "da43afe.8d4f85",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter Websocket",
        "func": "var inputDeviceProps = msg.payload.topic.split('/');\nvar deviceProps = flow.get('deviceProps')\nif (inputDeviceProps[0] != deviceProps.project) return null;\nif (inputDeviceProps[1] != deviceProps.deviceType) return null;\nif (inputDeviceProps[2] != deviceProps.name) return null;\nreturn {topic:msg.topic, payload:msg.payload.payload};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 240,
        "wires": [
            [
                "9e75e21c.458df"
            ]
        ]
    },
    {
        "id": "87f08687.b6d578",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Shift Msg",
        "func": "return msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 240,
        "wires": [
            [
                "da43afe.8d4f85"
            ]
        ]
    },
    {
        "id": "71ce0943.81bf18",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'mode-0-damper';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "6533b535.454c4c"
            ]
        ]
    },
    {
        "id": "c76a9544.852e88",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Mode 0 Damper {{{payload.script.name}}}",
        "output": "str",
        "x": 300,
        "y": 340,
        "wires": [
            [
                "c98976c.3996888"
            ]
        ]
    },
    {
        "id": "c98976c.3996888",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        function onDocumentReady()\n        {\n            setRemoteApp(false);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n        }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            updateDipoleReadings();\n            updateQuadReadings();\n        }\n",
        "output": "str",
        "x": 630,
        "y": 260,
        "wires": [
            [
                "3c7d21bd.ff843e"
            ]
        ]
    },
    {
        "id": "c1034be9.37f0a8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.dipole}}}\n{{{payload.script.quad}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 620,
        "y": 420,
        "wires": [
            [
                "2cbd92d3.517afe"
            ]
        ]
    },
    {
        "id": "450b0136.7ccbd",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dipole}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.quad}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 930,
        "y": 460,
        "wires": [
            [
                "2e95339f.b9da0c"
            ]
        ]
    },
    {
        "id": "b6fcc866.328488",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 950,
        "y": 380,
        "wires": [
            [
                "c273ba2f.eae8a8"
            ]
        ]
    },
    {
        "id": "6533b535.454c4c",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "balance.png",
        "output": "str",
        "x": 310,
        "y": 300,
        "wires": [
            [
                "c76a9544.852e88"
            ]
        ]
    },
    {
        "id": "28cd98f1.2a1518",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 940,
        "y": 340,
        "wires": [
            [
                "b6fcc866.328488"
            ]
        ]
    },
    {
        "id": "2f9f8abf.a80656",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 630,
        "y": 380,
        "wires": [
            [
                "c1034be9.37f0a8"
            ]
        ]
    },
    {
        "id": "c634a8d3.297848",
        "type": "http in",
        "z": "c4285970.3276d8",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "ca68de71.c19fe"
            ]
        ]
    },
    {
        "id": "65a7590b.59a2a8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n",
        "output": "str",
        "x": 830,
        "y": 120,
        "wires": [
            [
                "a64bb02e.9692a"
            ]
        ]
    },
    {
        "id": "9709fa69.9daac8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Mode 0 Damper",
        "output": "str",
        "x": 550,
        "y": 120,
        "wires": [
            [
                "a36869fc.6f5e58"
            ]
        ]
    },
    {
        "id": "ca68de71.c19fe",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n            window.location = '/apps'\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "9709fa69.9daac8"
            ]
        ]
    },
    {
        "id": "a36869fc.6f5e58",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "balance.png",
        "output": "str",
        "x": 690,
        "y": 120,
        "wires": [
            [
                "65a7590b.59a2a8"
            ]
        ]
    },
    {
        "id": "6c8ad237.33ae7c",
        "type": "inject",
        "z": "eaa5749e.352818",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 860,
        "y": 60,
        "wires": [
            [
                "6d4f56e0.04a238"
            ]
        ]
    },
    {
        "id": "6d4f56e0.04a238",
        "type": "exec",
        "z": "eaa5749e.352818",
        "command": "iwconfig wlan0 | grep ESSID",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 860,
        "y": 120,
        "wires": [
            [
                "c6d2055.718baf8"
            ],
            [],
            []
        ]
    },
    {
        "id": "c6d2055.718baf8",
        "type": "function",
        "z": "eaa5749e.352818",
        "name": "Get SSID",
        "func": "var ssid = msg.payload.substring(msg.payload.indexOf(\"ESSID\") + 6).split('\\n')[0];\nreturn {topic:msg.topic, payload:{topic:msg.topic ,payload:ssid, userID: msg.userID }};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 100,
        "wires": [
            [
                "9bc013a4.b46c"
            ]
        ]
    },
    {
        "id": "1e80ca53.767a96",
        "type": "http in",
        "z": "eaa5749e.352818",
        "name": "/setup",
        "url": "/setup",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "930a7a63.11bf58"
            ]
        ]
    },
    {
        "id": "e1192fe0.96315",
        "type": "template",
        "z": "eaa5749e.352818",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Wireless Setup",
        "output": "str",
        "x": 260,
        "y": 520,
        "wires": [
            [
                "fc3a3f22.7533"
            ]
        ]
    },
    {
        "id": "fc3a3f22.7533",
        "type": "template",
        "z": "eaa5749e.352818",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var appStarted = false;\n        var networkList = null;\n        var selectedNetwork = -1;\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            setRemoteApp(false);\n            $('#pwDialog').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (!appStarted)\n            {\n                sendActionMsg('getConnection', 'getConnection', {});\n                appStarted = true;\n            }\n        }\n        function onWebSocketClose()\n        {\n            wsConnectC();\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getConnection':\n                    $('#connectedSSID').text(msg.payload);\n                    sendActionMsg('getNetworks', 'getNetworks', {});\n                    break;\n                case 'connectToNetwork':\n                    sendActionMsg('getConnection', 'getConnection', {});\n                    $('#ssid').attr('disabled',false);\n                    $('#ssidkey').attr('disabled',false);\n                    $('#ssidButton').attr('disabled',false);\n                    break;\n                default:\n                // code block\n            }\n        }\n        function setSsid()\n        {\n            var ssid = $('#ssid').val();\n            var ssidkey = $('#ssidkey').val();\n            sendActionMsg('connectToNetwork', 'connectToNetwork', {ssid:ssid, key:ssidkey});\n            $('#connectedSSID').text('');\n            $('#ssid').val('');\n            $('#ssid').attr('disabled',true);\n            $('#ssidkey').val('');\n            $('#ssidkey').attr('disabled',true);\n            $('#ssidButton').attr('disabled',true);\n            \n        }\n",
        "output": "str",
        "x": 550,
        "y": 480,
        "wires": [
            [
                "380c1491.22fa9c"
            ]
        ]
    },
    {
        "id": "380c1491.22fa9c",
        "type": "template",
        "z": "eaa5749e.352818",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n",
        "output": "str",
        "x": 540,
        "y": 520,
        "wires": [
            [
                "4e6c8908.0524c8"
            ]
        ]
    },
    {
        "id": "41d7170c.80e638",
        "type": "template",
        "z": "eaa5749e.352818",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.wirelessSetup}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 790,
        "y": 520,
        "wires": [
            [
                "28f9a36b.9e7a3c"
            ]
        ]
    },
    {
        "id": "930a7a63.11bf58",
        "type": "template",
        "z": "eaa5749e.352818",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basicYellow.png",
        "output": "str",
        "x": 270,
        "y": 480,
        "wires": [
            [
                "e1192fe0.96315"
            ]
        ]
    },
    {
        "id": "4e6c8908.0524c8",
        "type": "template",
        "z": "eaa5749e.352818",
        "name": "html.wirelessSetup",
        "field": "payload.html.wirelessSetup",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Network Connection</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-6'>\n                                <span  class='card-text' >Connected to:</span>\n                            </div>\n                            <div class='col-md-6'>\n                                 <span  class='card-text' id='connectedSSID'>off/any</span>\n                            </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'>\n                                <span class=\"tableText\">SSID</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"ssid\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'>\n                                <span class=\"tableText\">KEY</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"ssidkey\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'>\n                            </div>\n                            <div class='col-md-6'>\n                                <button class='btn btn-block card-button big-text' id=\"ssidButton\" onclick=\"setSsid()\" >Connect & Reboot</button>\n                             </div>\n                            <div class='col-md-2'>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 830,
        "y": 480,
        "wires": [
            [
                "41d7170c.80e638"
            ]
        ]
    },
    {
        "id": "ab64b0d5.c3fee",
        "type": "websocket in",
        "z": "eaa5749e.352818",
        "name": "/setup/websocket",
        "server": "c427a7cd.35f1f8",
        "client": "",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "dbec0823.672678"
            ]
        ]
    },
    {
        "id": "9bc013a4.b46c",
        "type": "websocket out",
        "z": "eaa5749e.352818",
        "name": "/setup/websocket",
        "server": "c427a7cd.35f1f8",
        "client": "",
        "x": 1250,
        "y": 160,
        "wires": []
    },
    {
        "id": "dbec0823.672678",
        "type": "json",
        "z": "eaa5749e.352818",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "bb0701eb.a4b29"
            ]
        ]
    },
    {
        "id": "5ead619d.4bfff",
        "type": "switch",
        "z": "eaa5749e.352818",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getNetworks",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getConnection",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connectToNetwork",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 630,
        "y": 100,
        "wires": [
            [],
            [
                "6d4f56e0.04a238"
            ],
            [
                "71a17106.a018d"
            ]
        ]
    },
    {
        "id": "bb0701eb.a4b29",
        "type": "function",
        "z": "eaa5749e.352818",
        "name": "set userId and topic",
        "func": "return {\n    topic   : msg.payload.topic, \n    userID  : msg.payload.userID,\n    payload : msg.payload.payload};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 100,
        "wires": [
            [
                "5ead619d.4bfff"
            ]
        ]
    },
    {
        "id": "71a17106.a018d",
        "type": "function",
        "z": "eaa5749e.352818",
        "name": "Prepare WPA",
        "func": "var fileContents = 'ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\\nupdate_config=1\\ncountry=SE\\n';\nfileContents = fileContents + 'network={\\n   ssid=\"' + msg.payload.ssid + '\"\\n   psk=\"' + msg.payload.key + '\"\\n}\\n'\nreturn {topic:msg.topic, payload:fileContents};",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 180,
        "wires": [
            [
                "3ef93a0f.951976"
            ]
        ]
    },
    {
        "id": "3ef93a0f.951976",
        "type": "file",
        "z": "eaa5749e.352818",
        "name": "Write to ssid.conf",
        "filename": "/home/pi/ssid.conf",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 970,
        "y": 180,
        "wires": [
            [
                "4c1194c8.db057c"
            ]
        ]
    },
    {
        "id": "4c1194c8.db057c",
        "type": "exec",
        "z": "eaa5749e.352818",
        "command": "sudo mv /home/pi/ssid.conf /etc/wpa_supplicant/wpa_supplicant.conf",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "mv ssid to wpa",
        "x": 780,
        "y": 240,
        "wires": [
            [
                "1acb5f15.919f11"
            ],
            [],
            []
        ]
    },
    {
        "id": "1acb5f15.919f11",
        "type": "delay",
        "z": "eaa5749e.352818",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 940,
        "y": 240,
        "wires": [
            [
                "20f7c462.3d395c"
            ]
        ]
    },
    {
        "id": "20f7c462.3d395c",
        "type": "exec",
        "z": "eaa5749e.352818",
        "command": "sudo wpa_cli -i wlan0 reconfigure",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "wlan0 reconfigure",
        "x": 1110,
        "y": 240,
        "wires": [
            [
                "c80f01f0.2fe93"
            ],
            [],
            []
        ]
    },
    {
        "id": "c80f01f0.2fe93",
        "type": "delay",
        "z": "eaa5749e.352818",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 780,
        "y": 320,
        "wires": [
            [
                "fa9ce40f.c3e948"
            ]
        ]
    },
    {
        "id": "fa9ce40f.c3e948",
        "type": "exec",
        "z": "eaa5749e.352818",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 950,
        "y": 320,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c104210d.418eb",
        "type": "template",
        "z": "2c5d25cb.3428ca",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='https://www.maxiv.lu.se/' target='_blank'>\n                        <img src=\"/img/MAX-IVYellow.png\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/apps'><img src=\"/img/appsYellow.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b9df3f26.ab53f",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.html.websocket}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1150,
        "y": 40,
        "wires": [
            [
                "d1d9e12b.926ff"
            ]
        ]
    },
    {
        "id": "895ba39c.86e59",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "a9a62959.7c01e8"
            ]
        ]
    },
    {
        "id": "aa17ff35.7cdfd",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/pako.min.js\"></script>\n{{{payload.extraScripts}}}\n    <style>\n{{{payload.css}}}\n    </style>\n    <style>\n{{{payload.extraCss}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "895ba39c.86e59"
            ]
        ]
    },
    {
        "id": "d1d9e12b.926ff",
        "type": "http response",
        "z": "ca529822.9112f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 40,
        "wires": []
    },
    {
        "id": "c4ed2505.8c07e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var remoteApp = true;\n        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var project = '{{{payload.project}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n        var wsConnected = false;\n\n        function setRemoteApp(remoteAppSet)\n        {\n            remoteApp  = remoteAppSet;\n        }\n        function webSocketConnected()\n        {\n            return wsConnected;\n        }\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                wsConnected = true;\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                wsConnected = false;\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n                wsConnectC();\n            };\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n       });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n        function getCookie(extension)\n        {\n            var cookies = document.cookie.split(';');\n            var token = null;\n            var cookieName = project + extension + \"=\";\n            for (var icookie = 0; icookie < cookies.length; ++icookie)\n            {\n                var index = cookies[icookie].indexOf(cookieName);\n                if (index >= 0)\n                {\n                    token = cookies[icookie].substring(index + cookieName.length);\n                }\n            }\n            return token;\n        }\n        function sendActionMsg(topic,role,actionMsg)\n        {\n            var roleToken = \"\";\n            if (remoteApp) roleToken  = getCookie('Role');\n            if (roleToken == null)\n            {\n                location.reload();\n                return;\n            }\n            var webSocketMsg = \n            {\n                topic     : topic,\n                payload   : actionMsg,\n                userID    : userID,\n                token     : getCookie('Role'),\n                role      : role\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n        }\n",
        "output": "str",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "aa17ff35.7cdfd"
            ]
        ]
    },
    {
        "id": "99bb1519.85fc18",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "Get project name and userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['project'] = global.get('project')\nmsg.payload['userID'] = getRandomInt(32768);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 40,
        "wires": [
            [
                "c4ed2505.8c07e8"
            ]
        ]
    },
    {
        "id": "a9a62959.7c01e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 840,
        "y": 40,
        "wires": [
            [
                "35ffcf83.1547"
            ]
        ]
    },
    {
        "id": "35ffcf83.1547",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 40,
        "wires": [
            [
                "b9df3f26.ab53f"
            ]
        ]
    },
    {
        "id": "f5a9eda8.5c5bc",
        "type": "template",
        "z": "e3c68b88.d82258",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #434170;\n          --color2: #575491;\n          --color3: #9f9dc7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "966e270e.701e48",
        "type": "subflow:e3c68b88.d82258",
        "z": "8341090a.df9758",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "899d0666.97b868"
            ]
        ]
    },
    {
        "id": "9460eaf0.da7628",
        "type": "subflow:ca529822.9112f8",
        "z": "8341090a.df9758",
        "name": "",
        "x": 620,
        "y": 80,
        "wires": []
    },
    {
        "id": "899d0666.97b868",
        "type": "subflow:2c5d25cb.3428ca",
        "z": "8341090a.df9758",
        "x": 420,
        "y": 80,
        "wires": [
            [
                "9460eaf0.da7628"
            ]
        ]
    },
    {
        "id": "c6d4dfc7.827cb",
        "type": "subflow:8341090a.df9758",
        "z": "c4285970.3276d8",
        "name": "",
        "x": 1010,
        "y": 180,
        "wires": []
    },
    {
        "id": "28f9a36b.9e7a3c",
        "type": "subflow:8341090a.df9758",
        "z": "eaa5749e.352818",
        "name": "",
        "x": 1070,
        "y": 520,
        "wires": []
    },
    {
        "id": "a64bb02e.9692a",
        "type": "subflow:8341090a.df9758",
        "z": "c4285970.3276d8",
        "name": "",
        "x": 1010,
        "y": 120,
        "wires": []
    },
    {
        "id": "2e95339f.b9da0c",
        "type": "subflow:8341090a.df9758",
        "z": "c4285970.3276d8",
        "name": "",
        "x": 1150,
        "y": 460,
        "wires": []
    },
    {
        "id": "c0939e4a.6386f",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "pm2 restart red",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Restart",
        "x": 1140,
        "y": 200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9e290594.69c548",
        "type": "switch",
        "z": "5f562f66.a301e",
        "name": "Reset Tray",
        "property": "payload.reset.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 220,
        "wires": [
            [
                "c0939e4a.6386f"
            ],
            [
                "236a8168.66f7fe"
            ]
        ]
    },
    {
        "id": "236a8168.66f7fe",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Reboot",
        "x": 1140,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "557e4f40.b904e",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 940,
        "y": 180,
        "wires": [
            [
                "9e290594.69c548"
            ]
        ]
    },
    {
        "id": "c273ba2f.eae8a8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 940,
        "y": 420,
        "wires": [
            [
                "450b0136.7ccbd"
            ]
        ]
    },
    {
        "id": "c87aa87d.aef928",
        "type": "inject",
        "z": "c4285970.3276d8",
        "name": "deviceA",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "deviceA",
        "payload": "MQTTDEVICEA",
        "payloadType": "env",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "fdfbcac7.35b388"
            ]
        ]
    },
    {
        "id": "fdfbcac7.35b388",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Init device name",
        "func": "var mqttSplit = msg.payload.split('/');\nvar deviceProps = {\n    project     :   mqttSplit[0],\n    deviceType  :   mqttSplit[1],\n    name        :   mqttSplit[2],\n};\nflow.set(msg.topic + 'Props',deviceProps);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 40,
        "wires": []
    },
    {
        "id": "af9642ae.0c0da",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Device Names",
        "func": "msg.payload['deviceAName'] = flow.get('deviceAProps').name;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 180,
        "wires": [
            [
                "f328fcb4.91dc"
            ]
        ]
    },
    {
        "id": "aad8ecf5.c0443",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "parse Settings",
        "func": "var device = flow.get('device');\n\nvar teensyName = [\n    'chanOn0',\n    'timeOffset0',\n    'sign0',\n    'maxAcValue0',\n    'gain0',\n    'dacOffset0',\n    'chanOn1',\n    'timeOffset1',\n    'sign1',\n    'maxAcValue1',\n    'gain1',\n    'dacOffset1',\n    ];\nvar attrName = [\n    'onDipole',\n    'filterDipole',\n    'signDipole',\n    'maxAcDipole',\n    'gainDipole',\n    'offsetDipole',\n    'onQuad',\n    'filterQuad',\n    'signQuad',\n    'maxAcQuad',\n    'gainQuad',\n    'offsetQuad',\n    ]\nvar oldDevice = flow.get('oldDevice');\nvar payload = [];\nfor (var ii = 0; ii < 12; ++ii) payload[ii] = null;\nif (flow.get('initDevice'))\n{\n    for (var ii = 0; ii < 12; ++ii)\n    {\n        payload[ii] = {topic:teensyName[ii], payload : device[ attrName[ii] ].value};\n    };\n    flow.set('initDevice', false);\n}\nelse\n{\n    var icount = 0;\n    for (var ii = 0; ii < 12; ++ii)\n    {\n        if (device[ attrName[ii] ].value != oldDevice[ attrName[ii] ].value)\n        {\n            payload[icount] = {topic:teensyName[ii], payload : device[ attrName[ii] ].value};\n            ++icount;\n        }\n    }\n}\nflow.set('oldDevice', JSON.parse(JSON.stringify(device)));    \n\nreturn payload;\n",
        "outputs": 12,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 800,
        "wires": [
            [
                "67e5950f.722f3c"
            ],
            [
                "93be835b.869d1"
            ],
            [
                "8892880.2c7c678"
            ],
            [
                "7cebc3d0.3b5f1c"
            ],
            [
                "80a769ea.0ac978"
            ],
            [
                "fe7b2c04.71751"
            ],
            [
                "41fe307f.02975"
            ],
            [
                "1b25d7d.6c8b428"
            ],
            [
                "82e31b85.dbca28"
            ],
            [
                "982e7037.66c01"
            ],
            [
                "f05fb5d5.354688"
            ],
            [
                "10d75af2.3c7ec5"
            ]
        ]
    },
    {
        "id": "a4ad3242.87f7a",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Prep Teensy message",
        "func": "return {topic:msg.topic, payload: (msg.topic + ' ' + msg.payload.toString())};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 580,
        "wires": [
            [
                "e04a3c2f.e165",
                "f9af1957.a2e4e8"
            ]
        ]
    },
    {
        "id": "93be835b.869d1",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 620,
        "wires": [
            [
                "67e5950f.722f3c"
            ]
        ]
    },
    {
        "id": "8892880.2c7c678",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 660,
        "wires": [
            [
                "93be835b.869d1"
            ]
        ]
    },
    {
        "id": "7cebc3d0.3b5f1c",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 700,
        "wires": [
            [
                "8892880.2c7c678"
            ]
        ]
    },
    {
        "id": "80a769ea.0ac978",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 740,
        "wires": [
            [
                "7cebc3d0.3b5f1c"
            ]
        ]
    },
    {
        "id": "fe7b2c04.71751",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 780,
        "wires": [
            [
                "80a769ea.0ac978"
            ]
        ]
    },
    {
        "id": "41fe307f.02975",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 820,
        "wires": [
            [
                "fe7b2c04.71751"
            ]
        ]
    },
    {
        "id": "1b25d7d.6c8b428",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 860,
        "wires": [
            [
                "41fe307f.02975"
            ]
        ]
    },
    {
        "id": "82e31b85.dbca28",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 900,
        "wires": [
            [
                "1b25d7d.6c8b428"
            ]
        ]
    },
    {
        "id": "982e7037.66c01",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 940,
        "wires": [
            [
                "82e31b85.dbca28"
            ]
        ]
    },
    {
        "id": "f05fb5d5.354688",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 980,
        "wires": [
            [
                "982e7037.66c01"
            ]
        ]
    },
    {
        "id": "10d75af2.3c7ec5",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 1020,
        "wires": [
            [
                "f05fb5d5.354688"
            ]
        ]
    },
    {
        "id": "67e5950f.722f3c",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 490,
        "y": 580,
        "wires": [
            [
                "a4ad3242.87f7a",
                "a8fab79c.a492d8"
            ]
        ]
    },
    {
        "id": "e04a3c2f.e165",
        "type": "serial out",
        "z": "5f562f66.a301e",
        "name": "Teensy3.5",
        "serial": "3015577f.f8ec58",
        "x": 890,
        "y": 580,
        "wires": []
    },
    {
        "id": "48876f6b.6fca3",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "new settings",
        "links": [
            "dc207a50.928308"
        ],
        "x": 1205,
        "y": 40,
        "wires": []
    },
    {
        "id": "dc207a50.928308",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "settings to teensy",
        "links": [
            "48876f6b.6fca3"
        ],
        "x": 95,
        "y": 800,
        "wires": [
            [
                "aad8ecf5.c0443"
            ]
        ]
    },
    {
        "id": "f9af1957.a2e4e8",
        "type": "debug",
        "z": "5f562f66.a301e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 520,
        "wires": []
    },
    {
        "id": "2cbd92d3.517afe",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.dipole",
        "field": "payload.html.dipole",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dipole HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dipole</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>On (0 - 1)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"chanOn0(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='chanOn0'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"chanOn0(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Sign (-1 - +1)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"sign0(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='sign0'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"sign0(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Gain (-4 - +4)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"gain0(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='gain0'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"gain0(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Filter Tap (1 - 20)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"timeOffset0(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='timeOffset0'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"timeOffset0(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                           </table>\n                            <table table width='100%'>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Max AC</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <input id=\"maxAcValue0\" type=\"text\" value=\"0\" class=\"big-text\" oninput=\"maxAcValue0Change()\"/>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' id=\"maxAcValue0Button\" onclick=\"maxAcValue0()\" disabled>&#10004;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Offset</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <input id=\"dacOffset0\" type=\"text\" value=\"0\" class=\"big-text\" oninput=\"dacOffset0Change()\"/>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' id=\"dacOffset0Button\" onclick=\"dacOffset0()\" disabled>&#10004;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 950,
        "y": 260,
        "wires": [
            [
                "916e9d8f.7f58e"
            ]
        ]
    },
    {
        "id": "916e9d8f.7f58e",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.quad",
        "field": "payload.html.quad",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dipole HTML -->\n                <div class='card'>\n                    <p class='card-title'>Quadrupole</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>On (0 - 1)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"chanOn1(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='chanOn1'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"chanOn1(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Sign (-1 - +1)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"sign1(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='sign1'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"sign1(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Gain (-4 - +4)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"gain1(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='gain1'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"gain1(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Filter Tap (1 - 20)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"timeOffset1(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='timeOffset1'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"timeOffset1(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                           </table>\n                            <table table width='100%'>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Max AC</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <input id=\"maxAcValue1\" type=\"text\" value=\"0\" class=\"big-text\" oninput=\"maxAcValue1Change()\"/>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' id=\"maxAcValue1Button\" onclick=\"maxAcValue1()\" disabled>&#10004;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Offset</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <input id=\"dacOffset1\" type=\"text\" value=\"0\" class=\"big-text\" oninput=\"dacOffset1Change()\"/>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' id=\"dacOffset1Button\" onclick=\"dacOffset1()\" disabled>&#10004;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 940,
        "y": 300,
        "wires": [
            [
                "28cd98f1.2a1518"
            ]
        ]
    },
    {
        "id": "89701bdf.c255a8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.dipole}}}\n{{{payload.script.quad}}}\n",
        "output": "str",
        "x": 480,
        "y": 1260,
        "wires": [
            [
                "f1035634.bbe518"
            ]
        ]
    },
    {
        "id": "f1035634.bbe518",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.dipole",
        "field": "payload.html.dipole",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dipole HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dipole</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>On (0 - 1)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"chanOn0(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='chanOn0'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"chanOn0(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Sign (-1 - +1)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"sign0(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='sign0'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"sign0(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Gain (-4 - +4)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"gain0(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='gain0'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"gain0(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Filter Tap (1 - 20)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"timeOffset0(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='timeOffset0'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"timeOffset0(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                           </table>\n                            <table table width='100%'>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Max AC</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <input id=\"maxAcValue0\" type=\"text\" value=\"0\" class=\"big-text\" oninput=\"maxAcValue0Change()\"/>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' id=\"maxAcValue0Button\" onclick=\"maxAcValue0()\" disabled>&#10004;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Offset</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <input id=\"dacOffset0\" type=\"text\" value=\"0\" class=\"big-text\" oninput=\"dacOffset0Change()\"/>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' id=\"dacOffset0Button\" onclick=\"dacOffset0()\" disabled>&#10004;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 810,
        "y": 1100,
        "wires": [
            [
                "61b7a89f.8e2048"
            ]
        ]
    },
    {
        "id": "ab67f445.20d7d8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload != 'Success!') acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n",
        "output": "str",
        "x": 490,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "61b7a89f.8e2048",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.quad",
        "field": "payload.html.quad",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dipole HTML -->\n                <div class='card'>\n                    <p class='card-title'>Quadrupole</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>On (0 - 1)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"chanOn1(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='chanOn1'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"chanOn1(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Sign (-1 - +1)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"sign1(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='sign1'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"sign1(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Gain (-4 - +4)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"gain1(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='gain1'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"gain1(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Filter Tap (1 - 20)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"timeOffset1(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='timeOffset1'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"timeOffset1(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                           </table>\n                            <table table width='100%'>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Max AC</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <input id=\"maxAcValue1\" type=\"text\" value=\"0\" class=\"big-text\" oninput=\"maxAcValue1Change()\"/>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' id=\"maxAcValue1Button\" onclick=\"maxAcValue1()\" disabled>&#10004;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Offset</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <input id=\"dacOffset1\" type=\"text\" value=\"0\" class=\"big-text\" oninput=\"dacOffset1Change()\"/>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' id=\"dacOffset1Button\" onclick=\"dacOffset1()\" disabled>&#10004;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 800,
        "y": 1140,
        "wires": [
            [
                "666857af.4d8d38"
            ]
        ]
    },
    {
        "id": "666857af.4d8d38",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 810,
        "y": 1180,
        "wires": [
            [
                "48a803c0.3deb0c"
            ]
        ]
    },
    {
        "id": "48a803c0.3deb0c",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dipole}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.quad}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 790,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "3c7d21bd.ff843e",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.dipole",
        "field": "payload.script.dipole",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "function chanOn0(up)\n{\n    var chanOn0 = Number($('#chanOn0').html());\n    chanOn0 = chanOn0 + up;\n    if (chanOn0 > 1) chanOn0 = 1;\n    if (chanOn0 < 0) chanOn0 = 0;\n    setScalarValue(chanOn0, 'onDipole');\n}\nfunction sign0(up)\n{\n    var sign0 = Number($('#sign0').html());\n    sign0 = sign0 + 2 * up;\n    if (sign0 > 1) sign0 = 1;\n    if (sign0 < -1) sign0 = -1;\n    setScalarValue(sign0, 'signDipole');\n}\nfunction gain0(up)\n{\n    var gain0 = Number($('#gain0').html());\n    gain0 = gain0 + up;\n    if (gain0 > 4) gain0 = 4;\n    if (gain0 < -4) gain0 = -4;\n    setScalarValue(gain0, 'gainDipole');\n}\nfunction timeOffset0(up)\n{\n    var timeOffset0 = Number($('#timeOffset0').html());\n    timeOffset0 = timeOffset0 + up;\n    if (timeOffset0 > 20) timeOffset0 = 20;\n    if (timeOffset0 < 1) timeOffset0 = 1;\n    setScalarValue(timeOffset0, 'filterDipole');\n}\nvar maxAcValue0Changed = false;\nfunction maxAcValue0Change()\n{\n    maxAcValue0Changed = true;\n    $('#maxAcValue0Button').prop('disabled', false);\n \n}\nfunction maxAcValue0()\n{\n    $('#maxAcValue0Button').prop('disabled', true);\n    if (isNaN($('#maxAcValue0').val()))\n    {\n        maxAcValue0Changed = false;\n        return;\n    }\n    var maxAcValue0 = Number($('#maxAcValue0').val());\n    setScalarValue(maxAcValue0, 'maxAcDipole');\n    maxAcValue0Changed = false;\n}\nvar dacOffset0Changed = false;\nfunction dacOffset0Change()\n{\n    dacOffset0Changed = true;\n    $('#dacOffset0Button').prop('disabled', false);\n \n}\nfunction dacOffset0()\n{\n    $('#dacOffset0Button').prop('disabled', true);\n    if (isNaN($('#dacOffset0').val()))\n    {\n        dacOffset0Changed = false;\n        return;\n    }\n    var dacOffset0 = Number($('#dacOffset0').val());\n    setScalarValue(dacOffset0, 'offsetDipole');\n    dacOffset0Changed = false;\n}\nfunction updateDipoleReadings()\n{\n    $('#chanOn0').text(device.onDipole.value.toString());\n    $('#sign0').text(device.signDipole.value.toString());\n    $('#gain0').text(device.gainDipole.value.toString());\n    $('#timeOffset0').text(device.filterDipole.value.toString());\n    if (!$('#maxAcValue0').is(':focus') && !maxAcValue0Changed) $('#maxAcValue0').val(device.maxAcDipole.value.toString());\n    if (!$('#dacOffset0').is(':focus')  && !dacOffset0Changed)  $('#dacOffset0').val(device.offsetDipole.value.toString());\n}\n",
        "output": "str",
        "x": 630,
        "y": 300,
        "wires": [
            [
                "b961b4ae.1b9928"
            ]
        ]
    },
    {
        "id": "b961b4ae.1b9928",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.quad",
        "field": "payload.script.quad",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "function chanOn1(up)\n{\n    var chanOn1 = Number($('#chanOn1').html());\n    chanOn1 = chanOn1 + up;\n    if (chanOn1 > 1) chanOn1 = 1;\n    if (chanOn1 < 0) chanOn1 = 0;\n    setScalarValue(chanOn1, 'onQuad');\n}\nfunction sign1(up)\n{\n    var sign1 = Number($('#sign1').html());\n    sign1 = sign1 + 2 * up;\n    if (sign1 > 1) sign1 = 1;\n    if (sign1 < -1) sign1 = -1;\n    setScalarValue(sign1, 'signQuad');\n}\nfunction gain1(up)\n{\n    var gain1 = Number($('#gain1').html());\n    gain1 = gain1 + up;\n    if (gain1 > 4) gain1 = 4;\n    if (gain1 < -4) gain1 = -4;\n    setScalarValue(gain1, 'gainQuad');\n}\nfunction timeOffset1(up)\n{\n    var timeOffset1 = Number($('#timeOffset1').html());\n    timeOffset1 = timeOffset1 + up;\n    if (timeOffset1 > 20) timeOffset1 = 20;\n    if (timeOffset1 < 1) timeOffset1 = 1;\n    setScalarValue(timeOffset1, 'filterQuad');\n}\nvar maxAcValue1Changed = false;\nfunction maxAcValue1Change()\n{\n    maxAcValue1Changed = true;\n    $('#maxAcValue1Button').prop('disabled', false);\n \n}\nfunction maxAcValue1()\n{\n    $('#maxAcValue1Button').prop('disabled', true);\n    if (isNaN($('#maxAcValue1').val()))\n    {\n        maxAcValue1Changed = false;\n        return;\n    }\n    var maxAcValue1 = Number($('#maxAcValue1').val());\n    setScalarValue(maxAcValue1, 'maxAcQuad');\n    maxAcValue1Changed = false;\n}\nvar dacOffset1Changed = false;\nfunction dacOffset1Change()\n{\n    dacOffset1Changed = true;\n    $('#dacOffset1Button').prop('disabled', false);\n \n}\nfunction dacOffset1()\n{\n    $('#dacOffset1Button').prop('disabled', true);\n    if (isNaN($('#dacOffset1').val()))\n    {\n        dacOffset1Changed = false;\n        return;\n    }\n    var dacOffset1 = Number($('#dacOffset1').val());\n    setScalarValue(dacOffset1, 'offsetQuad');\n    dacOffset1Changed = false;\n}\nfunction updateQuadReadings()\n{\n    $('#chanOn1').text(device.onQuad.value.toString());\n    $('#sign1').text(device.signQuad.value.toString());\n    $('#gain1').text(device.gainQuad.value.toString());\n    $('#timeOffset1').text(device.filterQuad.value.toString());\n    if (!$('#maxAcValue1').is(':focus') && !maxAcValue1Changed) $('#maxAcValue1').val(device.maxAcQuad.value.toString());\n    if (!$('#dacOffset1').is(':focus')  && !dacOffset1Changed)  $('#dacOffset1').val(device.offsetQuad.value.toString());\n}\n",
        "output": "str",
        "x": 630,
        "y": 340,
        "wires": [
            [
                "2f9f8abf.a80656"
            ]
        ]
    },
    {
        "id": "a8fab79c.a492d8",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Settings Sent",
        "func": "return {topic:'settingsSent',payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 400,
        "wires": [
            [
                "9115ea87.0ca208"
            ]
        ]
    }
]